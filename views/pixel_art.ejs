<html>

<head>
    <title>Pixel Art Gen</title>
    <%- include('partials/html_head') %>
    <style>
        body {
            background-color: rgb(207, 0, 0);
        }

        canvas {
            position: absolute;
            width: 90%;
            height: 80%;
            background-color: rgb(0, 0, 0);
            /* create a border */
            border: 5px solid rgb(108, 108, 108);
            /* position in the middle of the browser window */
            top: 56%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .ui {
            position: absolute;
            top: 7%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgb(0, 0, 0);
            /* create a border */
            border: 5px solid rgb(108, 108, 108);
            /* center all the elements inside the ui */
            text-align: center;


        }

        button {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
            border: 1px solid rgb(108, 108, 108);
            padding: 10px;
            margin: 10px;
            font-size: 20px;
        }

        .dropDown {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
            border: 1px solid rgb(108, 108, 108);
            padding: 10px;
            margin: 10px;
            font-size: 20px;
        }

        .dropDown option {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
            border: 1px solid rgb(108, 108, 108);
            padding: 10px;
            margin: 10px;
            font-size: 20px;
        }

        /* make it so the ui gets smaller withthe window */
        @media screen and (max-width: 700px) {

            .ui,
            canvas button {
                width: 100%;
            }
        }

        /* make it so the canvas hieght gets smaller with the browser hieght */
        @media screen and (max-height: 600px) {
            canvas {
                height: 60%;
            }
        }

        #home-btn {
            background-color: #14ca14;
            top: 20px;
            font-size: 14px;
            color: white;
            padding: 10px 15px;
        }
    </style>
</head>

<body>
    <button id="home-btn" onclick="window.location.href='/'">Home</button>
    
    <div class="ui">
        <button onclick="startAnimation()">Start</button>
        <button onclick="stopAnimation()">Stop</button>
        <select class="dropDown">
            <option value="1">Fractal</option>
            <option value="2">Grower</option>
            <option value="3">SimSize</option>
        </select>
    </div>
    <canvas id="myCanvas"></canvas>
    <script>
        const canvas = document.getElementById("myCanvas");
        const ctx = canvas.getContext("2d");
        const pointSize = 1;
        let canvasWidth = canvas.width;
        let canvasHeight = canvas.height;
        let canvasMiddleX = canvasWidth / 2;
        let canvasMiddleY = canvasHeight / 2;
        const whitePixelColour = [255, 255, 255];

        let cancelAnimationId = null;
        const startAnimation = () => {
            cancelAnimationId = requestAnimationFrame(updateCanvasSize);
        };
        const stopAnimation = () => {
            cancelAnimationFrame(cancelAnimationId);
            cancelAnimationId = null;
        };

        function updateCanvasSize() {
            // update the canvas size
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            canvasWidth = canvas.width;
            canvasHeight = canvas.height;
            canvasMiddleX = canvasWidth / 2;
            canvasMiddleY = canvasHeight / 2;

            // clear the canvas
            ctx.clearRect(0, 0, canvasWidth, canvasHeight);

            // run the startSimulation function
            startSimulation();

            // request another frame if the animation is still running
            if (cancelAnimationId !== null) {
                cancelAnimationId = requestAnimationFrame(updateCanvasSize);
            }
        };

        // Add an event listener for window resize events
        window.addEventListener('resize', updateCanvasSize);

        function drawPixel(x, y, color) {
            var pixel = ctx.createImageData(1, 1); // create a 1x1 pixel image data
            pixel.data[0] = color[0]; // set the red value
            pixel.data[1] = color[1]; // set the green value
            pixel.data[2] = color[2]; // set the blue value
            pixel.data[3] = 255; // set the alpha value (full opacity)
            ctx.putImageData(pixel, x, y); // draw the pixel on the canvas
        };

        function checkColor(x, y) {
            var pixel = ctx.getImageData(x, y, pointSize, pointSize);
            var data = pixel.data;
            var color = "rgb(" + data[0] + ", " + data[1] + ", " + data[2] + ")";
            return color;
        };

        function randomWalk(x, y) {
            // get the canvas element and its dimensions
            var canvas = document.getElementById("myCanvas");
            var canvasWidth = canvas.width;
            var canvasHeight = canvas.height;

            // repeat the function until the point is outside the canvas boundaries
            while (x >= 0 && x < canvasWidth && y >= 0 && y < canvasHeight) {
                // pick a random point from the surrounding points
                var surroundingPoints = [
                    [x - 1, y],
                    [x + 1, y],
                    [x, y - 1],
                    [x, y + 1]
                ];
                var index = Math.floor(Math.random() * surroundingPoints.length);
                var point = surroundingPoints[index];
                x = point[0];
                y = point[1];

                // check the color of the point
                var color = checkColor(x, y);
                if (color == "rgb(0, 0, 0)") {
                    // if the color is black, create a pixel there
                    drawPixel(x, y, [255, 255, 255]);
                } else {
                    // if the color is not black, do nothing
                }
            }
        };

        function canvasSIze() {
            // get the canvas size and show it int he middle of the canvas
            var canvasSize = canvasWidth + " x " + canvasHeight;
            ctx.font = "30px Arial";
            ctx.fillStyle = "white";
            ctx.textAlign = "center";
            ctx.fillText(canvasSize, canvasMiddleX, canvasMiddleY);
        };

        function startSimulation() {
            // clear the canvas#
            ctx.clearRect(0, 0, canvasWidth, canvasHeight);

            // get the selected option from the drop down menu
            var dropDown = document.getElementsByClassName("dropDown")[0];
            var selectedOption = dropDown.options[dropDown.selectedIndex].value;

            // start the simulation
            if (selectedOption == "1") {
                //pick 4 random point and draw a pixel there
                var x1 = Math.floor(Math.random() * canvasWidth);
                var y1 = Math.floor(Math.random() * canvasHeight);
                var x2 = Math.floor(Math.random() * canvasWidth);
                var y2 = Math.floor(Math.random() * canvasHeight);
                var x3 = Math.floor(Math.random() * canvasWidth);
                var y3 = Math.floor(Math.random() * canvasHeight);
                var x4 = Math.floor(Math.random() * canvasWidth);
                var y4 = Math.floor(Math.random() * canvasHeight);
                drawPixel(x1, y1, whitePixelColour);
                drawPixel(x2, y2, whitePixelColour);
                drawPixel(x3, y3, whitePixelColour);
                drawPixel(x4, y4, whitePixelColour);

            } else if (selectedOption == "2") {
                randomWalk(canvasMiddleX, canvasMiddleY);
            } else if (selectedOption == "3") {
                canvasSIze();
            }
        };

    </script>
</body>

</html>